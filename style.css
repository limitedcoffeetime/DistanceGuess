body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    font-family: sans-serif;
    background-color: #f0f0f0;
    overflow-y: scroll; /* Prevent layout shifts from scrollbar appearing/disappearing */
}

#game-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    width: 90vw; /* Flexible width */
    max-width: 400px; /* Max width for larger screens */
    margin-left: auto; /* Ensure centering */
    margin-right: auto; /* Ensure centering */
}

#coordinate-plane {
    width: 100%; /* Take full width of parent less padding */
    max-width: 300px; /* Maintain original max size */
    aspect-ratio: 1 / 1; /* Keep it square */
    background-color: #e0e0e0;
    position: relative;
    border: 1px solid #ccc;
    margin-bottom: 20px;
    margin-left: auto; /* Added for robust centering */
    margin-right: auto; /* Added for robust centering */
    overflow: hidden; /* Ensures dots don't go outside if positioned at edges */
}

.dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    position: absolute;
    transform: translate(-50%, -50%); /* Center the dot on its coordinates */
    z-index: 1; /* Ensure dots are above the line */
}

#controls {
    margin-bottom: 20px;
    display: flex;
    flex-wrap: wrap; /* Allow controls to wrap on smaller screens */
    justify-content: center;
    align-items: center;
    min-height: 45px; /* Added to stabilize height for consistent layout */
}

#controls label {
    margin-right: 10px;
}

#controls input[type="number"] {
    padding: 8px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    width: 80px; /* Fixed width for the input */
}

#controls button {
    padding: 8px 15px;
    border: none;
    border-radius: 5px;
    background-color: #007bff;
    color: white;
    cursor: pointer;
    margin-top: 5px; /* Add some margin for wrapped items */
}

#controls button:hover {
    background-color: #0056b3;
}

#feedback {
    padding: 10px;
    margin-top: 15px;
    border-radius: 5px;
    font-weight: bold;
    transition: background-color 0.3s ease, color 0.3s ease, border 0.3s ease;
    border: 2px solid transparent;
    min-height: 98px; /* Reverted to min-height */
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
}

#stats p {
    margin: 5px 0;
}

/* Responsive adjustments */
@media (max-width: 400px) {
    #controls {
        flex-direction: column;
    }
    #controls input[type="number"],
    #controls button {
        width: 100%;
        margin-right: 0;
        margin-bottom: 10px;
    }
    #controls label {
        margin-bottom: 5px;
        margin-right: 0;
    }
}

/* Phase 7: Visual Enhancements */

/* Dot Appearance Animation */
.dot-appear {
    animation: dotAppearAnimation 0.3s ease-out forwards;
    transform: scale(0);
}

@keyframes dotAppearAnimation {
    to {
        transform: scale(1);
    }
}

/* Distance Line Styling */
.distance-line {
    position: absolute;
    height: 3px;
    background-color: #888; /* Default/neutral color before guess */
    transform-origin: 0 50%; /* Rotate around the starting point (left-center) */
    opacity: 0;
    animation: lineAppearAnimation 0.5s ease-out forwards 0.2s; /* Appear after dots */
    z-index: 0; /* Ensure line is below the dots */
}

@keyframes lineAppearAnimation {
    to {
        opacity: 1;
    }
}

/* Animations for the line based on guess correctness */
.line-correct-animation {
    /* Optionally add a specific animation for correct, e.g., a pulse */
    /* background-color: rgba(76, 175, 80, 0.7) !important; /* Greenish */
    animation: lineAppearAnimation 0.5s ease-out forwards, correctPulse 1s ease-in-out 0.5s;
}

.line-incorrect-animation {
    /* Optionally add a specific animation for incorrect, e.g., a shake */
    /* background-color: rgba(255, 152, 0, 0.7) !important; /* Orangeish */
    animation: lineAppearAnimation 0.5s ease-out forwards, incorrectPulse 1s ease-in-out 0.5s;
}

@keyframes correctPulse {
    0%, 100% { box-shadow: 0 0 8px 2px rgba(76, 175, 80, 0.7); }
    50% { box-shadow: 0 0 12px 4px rgba(76, 175, 80, 1); }
}

@keyframes incorrectPulse {
    0%, 100% { box-shadow: 0 0 8px 2px rgba(255, 152, 0, 0.7); }
    50% { box-shadow: 0 0 12px 4px rgba(255, 152, 0, 1); }
}


/* Enhanced Feedback Visual Cues */
.feedback-correct {
    background-color: #e8f5e9; /* Light green */
    color: #2e7d32; /* Dark green text */
    border-color: #a5d6a7;
}

.feedback-incorrect {
    background-color: #ffebee; /* Light red */
    color: #c62828; /* Dark red text */
    border-color: #ef9a9a;
}

.feedback-error {
    background-color: #fff3e0; /* Light orange for general input errors */
    color: #e65100; /* Dark orange text */
    border-color: #ffcc80;
}

/* Ensure button focus states are visible and consistent */
button:focus,
input[type="text"]:focus {
    outline: 2px solid #007bff; /* A common focus indicator color */
    outline-offset: 2px;
}

/* Consistency check for buttons (example) */
.controls button, #start-screen button, #game-over-screen button {
    padding: 10px 15px;
    font-size: 1em;
    margin: 5px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

/* Example: Primary action button styling */
#submit-guess, #start-game-button, #restart-game-button {
    background-color: #007bff;
    color: white;
    border: none;
}
#submit-guess:hover, #start-game-button:hover, #restart-game-button:hover {
    background-color: #0056b3;
}

#next-problem {
    background-color: #6c757d;
    color: white;
    border: none;
}
#next-problem:hover {
    background-color: #545b62;
}
